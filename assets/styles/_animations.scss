// ============================================
// ðŸŽ¬ SYSTÃˆME D'ANIMATIONS ULTRA-MODERNES
// ============================================

// Variables d'animation
$animation-fast: 200ms;
$animation-base: 300ms;
$animation-slow: 500ms;
$animation-ultra-slow: 800ms;

// Easing functions modernes
$ease-out-expo: cubic-bezier(0.16, 1, 0.3, 1);
$ease-out-quart: cubic-bezier(0.25, 1, 0.5, 1);
$ease-out-back: cubic-bezier(0.34, 1.56, 0.64, 1);
$ease-material: cubic-bezier(0.4, 0.0, 0.2, 1);
$ease-ios: cubic-bezier(0.25, 0.46, 0.45, 0.94);

// ============================================
// ðŸš€ ANIMATIONS D'ENTRÃ‰E (REVEAL)
// ============================================

@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translate3d(0, 2rem, 0);
  }
  to {
    opacity: 1;
    transform: translate3d(0, 0, 0);
  }
}

@keyframes fadeInDown {
  from {
    opacity: 0;
    transform: translate3d(0, -2rem, 0);
  }
  to {
    opacity: 1;
    transform: translate3d(0, 0, 0);
  }
}

@keyframes fadeInLeft {
  from {
    opacity: 0;
    transform: translate3d(-2rem, 0, 0);
  }
  to {
    opacity: 1;
    transform: translate3d(0, 0, 0);
  }
}

@keyframes fadeInRight {
  from {
    opacity: 0;
    transform: translate3d(2rem, 0, 0);
  }
  to {
    opacity: 1;
    transform: translate3d(0, 0, 0);
  }
}

@keyframes scaleIn {
  from {
    opacity: 0;
    transform: scale3d(0.8, 0.8, 1);
  }
  to {
    opacity: 1;
    transform: scale3d(1, 1, 1);
  }
}

@keyframes slideInUp {
  from {
    transform: translate3d(0, 100%, 0);
    visibility: visible;
  }
  to {
    transform: translate3d(0, 0, 0);
  }
}

@keyframes slideInDown {
  from {
    transform: translate3d(0, -100%, 0);
    visibility: visible;
  }
  to {
    transform: translate3d(0, 0, 0);
  }
}

// ============================================
// ðŸŒŠ ANIMATIONS FLUIDES (MICRO-INTERACTIONS)
// ============================================

@keyframes pulse {
  0%, 100% {
    transform: scale3d(1, 1, 1);
  }
  50% {
    transform: scale3d(1.05, 1.05, 1);
  }
}

@keyframes bounce {
  0%, 20%, 53%, 80%, 100% {
    animation-timing-function: $ease-out-quart;
    transform: translate3d(0, 0, 0);
  }
  40%, 43% {
    animation-timing-function: $ease-out-quart;
    transform: translate3d(0, -1rem, 0);
  }
  70% {
    animation-timing-function: $ease-out-quart;
    transform: translate3d(0, -0.5rem, 0);
  }
  90% {
    transform: translate3d(0, -0.2rem, 0);
  }
}

@keyframes shake {
  0%, 100% {
    transform: translate3d(0, 0, 0);
  }
  10%, 30%, 50%, 70%, 90% {
    transform: translate3d(-0.5rem, 0, 0);
  }
  20%, 40%, 60%, 80% {
    transform: translate3d(0.5rem, 0, 0);
  }
}

@keyframes float {
  0%, 100% {
    transform: translate3d(0, 0, 0);
  }
  50% {
    transform: translate3d(0, -1rem, 0);
  }
}

// ============================================
// ðŸ“± ANIMATIONS TACTILES MOBILES
// ============================================

@keyframes touchFeedback {
  0% {
    transform: scale3d(1, 1, 1);
  }
  50% {
    transform: scale3d(0.95, 0.95, 1);
  }
  100% {
    transform: scale3d(1, 1, 1);
  }
}

@keyframes ripple {
  0% {
    transform: scale3d(0, 0, 1);
    opacity: 1;
  }
  100% {
    transform: scale3d(1, 1, 1);
    opacity: 0;
  }
}

@keyframes swipeReveal {
  from {
    opacity: 0;
    transform: translate3d(100%, 0, 0);
  }
  to {
    opacity: 1;
    transform: translate3d(0, 0, 0);
  }
}

// ============================================
// ðŸŽ¨ CLASSES UTILITAIRES D'ANIMATION
// ============================================

// Classes de base avec hardware acceleration
.animate {
  will-change: transform, opacity;
  backface-visibility: hidden;
  transform: translate3d(0, 0, 0);
}

// Animations d'entrÃ©e
.animate-fade-in-up {
  @extend .animate;
  animation: fadeInUp $animation-base $ease-out-expo;
}

.animate-fade-in-down {
  @extend .animate;
  animation: fadeInDown $animation-base $ease-out-expo;
}

.animate-fade-in-left {
  @extend .animate;
  animation: fadeInLeft $animation-base $ease-out-expo;
}

.animate-fade-in-right {
  @extend .animate;
  animation: fadeInRight $animation-base $ease-out-expo;
}

.animate-scale-in {
  @extend .animate;
  animation: scaleIn $animation-base $ease-out-back;
}

.animate-slide-in-up {
  @extend .animate;
  animation: slideInUp $animation-slow $ease-out-expo;
}

.animate-slide-in-down {
  @extend .animate;
  animation: slideInDown $animation-slow $ease-out-expo;
}

// Micro-interactions
.animate-pulse {
  @extend .animate;
  animation: pulse 2s infinite;
}

.animate-bounce {
  @extend .animate;
  animation: bounce 1s;
}

.animate-float {
  @extend .animate;
  animation: float 3s ease-in-out infinite;
}

// Feedback tactile
.animate-touch {
  @extend .animate;
  animation: touchFeedback $animation-fast $ease-material;
}

// ============================================
// ðŸŒˆ ANIMATIONS AVEC DÃ‰LAIS (STAGGERED)
// ============================================

.animate-stagger {
  .animate-item {
    opacity: 0;
    transform: translate3d(0, 2rem, 0);
    animation: fadeInUp $animation-base $ease-out-expo forwards;

    @for $i from 1 through 10 {
      &:nth-child(#{$i}) {
        animation-delay: #{$i * 0.1}s;
      }
    }
  }
}

// ============================================
// ðŸ“± ANIMATIONS RESPONSIVE
// ============================================

// RÃ©ductions sur mobile pour Ã©conomiser la batterie
@media (max-width: 768px) {
  .animate-reduce-motion {
    animation-duration: 0.5s !important;
    animation-iteration-count: 1 !important;
  }

  // Respect des prÃ©fÃ©rences utilisateur
  @media (prefers-reduced-motion: reduce) {
    * {
      animation-duration: 0.01ms !important;
      animation-iteration-count: 1 !important;
      transition-duration: 0.01ms !important;
    }
  }
}

// ============================================
// ðŸŽ¯ ANIMATIONS AU SCROLL (INTERSECTION OBSERVER)
// ============================================

.scroll-reveal {
  opacity: 0;
  transform: translate3d(0, 2rem, 0);
  transition: all $animation-slow $ease-out-expo;

  &.is-visible {
    opacity: 1;
    transform: translate3d(0, 0, 0);
  }

  // Variantes de direction
  &.from-left {
    transform: translate3d(-2rem, 0, 0);

    &.is-visible {
      transform: translate3d(0, 0, 0);
    }
  }

  &.from-right {
    transform: translate3d(2rem, 0, 0);

    &.is-visible {
      transform: translate3d(0, 0, 0);
    }
  }

  &.from-scale {
    transform: scale3d(0.8, 0.8, 1);

    &.is-visible {
      transform: scale3d(1, 1, 1);
    }
  }
}

// ============================================
// ðŸ’« EFFET PARALLAX MOBILE OPTIMISÃ‰
// ============================================

.parallax {
  will-change: transform;
  transform: translate3d(0, 0, 0);

  // Version mobile moins intensive
  @media (max-width: 768px) {
    transform: none;
    will-change: auto;
  }
}

// ============================================
// ðŸŽ­ TRANSITIONS AVANCÃ‰ES
// ============================================

// Transition de base optimisÃ©e
.transition {
  transition: all $animation-base $ease-material;
  will-change: transform, opacity;
}

// Transition rapide pour feedback immÃ©diat
.transition-fast {
  transition: all $animation-fast $ease-material;
  will-change: transform, opacity;
}

// Transition lente pour effets dramatiques
.transition-slow {
  transition: all $animation-slow $ease-out-expo;
  will-change: transform, opacity;
}

// Hover/Focus states modernes
.interactive {
  @extend .transition-fast;
  cursor: pointer;
  user-select: none;
  -webkit-tap-highlight-color: transparent;

  &:hover,
  &:focus {
    transform: translateY(-2px);
    box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);
  }

  &:active {
    transform: translateY(0);
    transition-duration: $animation-fast;
  }

  // Touch feedback pour mobile
  @media (hover: none) {
    &:active {
      transform: scale3d(0.98, 0.98, 1);
    }
  }
}

// ============================================
// ðŸŒŸ EFFET GLASSMORPHISM
// ============================================

.glass {
  background: rgba(255, 255, 255, 0.1);
  backdrop-filter: blur(20px);
  -webkit-backdrop-filter: blur(20px);
  border: 1px solid rgba(255, 255, 255, 0.2);
  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
}

// ============================================
// ðŸŽª EFFET MORPHING BUTTON
// ============================================

.morph-button {
  @extend .transition;
  overflow: hidden;
  position: relative;

  &::before {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    width: 0;
    height: 0;
    background: rgba(255, 255, 255, 0.1);
    border-radius: 50%;
    transform: translate(-50%, -50%);
    transition: width $animation-base $ease-out-expo, 
                height $animation-base $ease-out-expo;
  }

  &:hover::before,
  &:focus::before {
    width: 300px;
    height: 300px;
  }
} 